<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">    

<mapper namespace="SQSM_PUSH">
		
		<select id="selectAlertList" resultType="MlMap">
		<![CDATA[
		SELECT * 
		FROM (
			SELECT AA.*
			,CC.SLFDGNSS_DT
			, CASE WHEN TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDDHH24MISS') >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDD')||'000000' AND TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDDHH24MISS') < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDD')||'120000' 
			             AND coalesce(CC.SLFDGNSS_DT,'00000000000000') >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDD')||'000000' 
			             AND coalesce(CC.SLFDGNSS_DT,'00000000000000') < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDD')||'120000' THEN 'N'
			       WHEN TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDDHH24MISS') >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDD')||'120000' AND TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDDHH24MISS') < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS')+'1 day','YYYYMMDD')||'000000' 
               			 AND coalesce(CC.SLFDGNSS_DT,'00000000000000') >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDD')||'120000' 
               			 AND coalesce(CC.SLFDGNSS_DT,'00000000000000') < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS')+'1 day','YYYYMMDD')||'000000' THEN 'N'
                   ELSE 'Y' END PUSH_AT
            FROM (
	            SELECT 
	                A.ISLPRSN_NM,
	                B.PUSHID AS USR_PUSHID,
	                A.SLFDGNSS_DT1,
	                A.SLFDGNSS_DT2,
	                A.ISLPRSN_SN,
	                GET_PUSH_CODENAME(B.USE_LANG, 'MSG1') AS PUSH_MSG_USR
	            FROM 
	                TISL_ISLPRSN A, TISL_TRMNL B, (SELECT MNGR_SN 
	                                               FROM TISL_MNGR tm
	                                               WHERE tm.MNGR_SN NOT IN ( SELECT MNGR_SN FROM TISL_MNGR tm2 WHERE tm2.LOGIN_ID = 'CORONA' OR tm2.LOGIN_ID LIKE '%0000') 
	                                               )C
            WHERE 1=1 
            AND 
                A.DELETE_AT = 'N'
            AND 
                B.DELETE_AT = 'N'
            AND 
                A.ISLPRSN_SN = B.ISLPRSN_SN
            AND
                B.USE_LANG = #{USE_LANG}
            AND 
                B.TRMNL_KND_CODE = #{TRMNL_KND_CODE}
            AND 
                A.ECSHG_MNGR_SN = C.MNGR_SN
            AND
                (
                (coalesce(A.SLFDGNSS_DT1, '1000') = TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') + (INTERVAL '30' MINUTE), 'HH24MI'))
            OR
                (coalesce(A.SLFDGNSS_DT2, '2000') = TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') + (INTERVAL '30' MINUTE), 'HH24MI'))
                )
            ) AA
            JOIN (
                SELECT A.*
                FROM TISL_ISLPRSN_STTUS_HIST A
                LEFT OUTER JOIN TISL_ISLPRSN_STTUS_HIST B
                ON A.ISLPRSN_SN = B.ISLPRSN_SN
                AND B.STTUS_REGIST_DT > A.STTUS_REGIST_DT
                WHERE B.ISLPRSN_SN IS NULL
            ) BB
             ON AA.ISLPRSN_SN = BB.ISLPRSN_SN
            AND BB.ISLPRSN_STTUS_CODE = '00301'
            LEFT OUTER JOIN ( SELECT A1.* FROM TISL_ISLPRSN_SLFDGNSS A1
            	   LEFT OUTER JOIN TISL_ISLPRSN_SLFDGNSS B1
            	   ON A1.ISLPRSN_SN = B1.ISLPRSN_SN
            	   AND A1.SLFDGNSS_DT < B1.SLFDGNSS_DT
            	   WHERE B1.ISLPRSN_SN IS NULL
            ) CC
            ON AA.ISLPRSN_SN = CC.ISLPRSN_SN
            where  1=1
          ) A3
         WHERE PUSH_AT = 'Y']]>
         </select>
		
		
		<!-- Consulta si ha hecho el autodiagnóstico (para personas en cuarentena) -->
		<select id="selectSlfdgnssAtList" resultType="MlMap">
			 <![CDATA[
			  SELECT *
			  FROM (
			  SELECT AA.* 
			  , CASE WHEN GET_SLFDGNSS_AMFM(TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDDHH24MISS')) = 'FM' THEN SLFDGNSS_FM_AT
				     WHEN GET_SLFDGNSS_AMFM(TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDDHH24MISS')) = 'AM' THEN SLFDGNSS_AM_AT
			    ELSE '' END AS SLFDGNSS_AT 
				FROM (
				SELECT 
					A.ISLPRSN_SN 
					, B.PUSHID AS USR_PUSHID
					, GET_PUSH_CODENAME(B.USE_LANG, 'MSG2') AS PUSH_MSG_USR
					, A.ISLPRSN_NM
					,CASE WHEN GET_SLFDGNSS_AMFM(E.SLFDGNSS_DT)='AM' THEN 'Y' ELSE 'N' END AS SLFDGNSS_AM_AT        
		   			,CASE WHEN GET_SLFDGNSS_AMFM(E.SLFDGNSS_DT)='FM' THEN 'Y' ELSE 'N' END AS SLFDGNSS_FM_AT
		   			,coalesce(A.SLFDGNSS_DT1,'1000') AS SLFDGNSS_DT1
					,coalesce(A.SLFDGNSS_DT2,'2000') AS SLFDGNSS_DT2
					,coalesce(B.TRMNL_KND_CODE,'00402') AS USR_TRMNL_KND_CODE
				FROM TISL_ISLPRSN A
				JOIN TISL_TRMNL B
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND A.DELETE_AT = 'N'
				AND B.DELETE_AT = 'N'
				AND B.USE_LANG = #{USE_LANG}
				JOIN (SELECT * 
					  FROM TISL_MNGR tm
					  WHERE tm.MNGR_SN NOT IN ( SELECT MNGR_SN FROM TISL_MNGR tm2 WHERE tm2.LOGIN_ID = 'CORONA' OR tm2.LOGIN_ID LIKE '%0000') 
					 ) C
				ON A.ECSHG_MNGR_SN = C.MNGR_SN
				AND C.DELETE_AT = 'N'
				LEFT OUTER JOIN (SELECT A.* FROM TISL_ISLPRSN_STTUS_HIST A
				LEFT OUTER JOIN TISL_ISLPRSN_STTUS_HIST B		
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND A.STTUS_REGIST_DT < B.STTUS_REGIST_DT
				WHERE B.ISLPRSN_SN IS NULL
				) D
				ON A.ISLPRSN_SN = D.ISLPRSN_SN
				LEFT OUTER JOIN (SELECT A.* FROM TISL_ISLPRSN_SLFDGNSS A
				LEFT OUTER JOIN TISL_ISLPRSN_SLFDGNSS B
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND A.SLFDGNSS_DT < B.SLFDGNSS_DT
				WHERE B.ISLPRSN_SN IS NULL
				) E
				ON A.ISLPRSN_SN = E.ISLPRSN_SN
				WHERE 1=1
				AND D.ISLPRSN_STTUS_CODE IN ('00301') 
				AND A.DELETE_AT = 'N'
				AND B.DELETE_AT = 'N'
				AND C.DELETE_AT = 'N'
				AND (B.PUSHID IS NOT NULL OR C.PUSHID  IS NOT NULL)
				) AA
				) BB
				WHERE BB.SLFDGNSS_AT = 'N'
				AND BB.USR_TRMNL_KND_CODE = #{TRMNL_KND_CODE}
				AND	
				(
					/* 1 hora después de la hora designada, 1 vez cada uno */
					(coalesce(BB.SLFDGNSS_DT1, '1000') = TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '60' MINUTE), 'HH24MI'))
					OR	
					(coalesce(BB.SLFDGNSS_DT2, '2000') = TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '60' MINUTE), 'HH24MI'))
					/* 3 veces cada 10 minutos después de la hora designada  */
					/*(BB.SLFDGNSS_DT1  >= TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '10' MINUTE), 'HH24MI') AND BB.SLFDGNSS_DT1  < TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '9' MINUTE), 'HH24MI'))
					OR  (BB.SLFDGNSS_DT1  >= TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '20' MINUTE), 'HH24MI') AND BB.SLFDGNSS_DT1  < TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '19' MINUTE), 'HH24MI'))
					OR  (BB.SLFDGNSS_DT1  >= TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '30' MINUTE), 'HH24MI') AND BB.SLFDGNSS_DT1  < TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '29' MINUTE), 'HH24MI'))
					OR	(BB.SLFDGNSS_DT2  >= TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '10' MINUTE), 'HH24MI') AND BB.SLFDGNSS_DT2  < TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '9' MINUTE), 'HH24MI'))
					OR  (BB.SLFDGNSS_DT2  >= TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '20' MINUTE), 'HH24MI') AND BB.SLFDGNSS_DT2  < TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '19' MINUTE), 'HH24MI'))
					OR  (BB.SLFDGNSS_DT2  >= TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '30' MINUTE), 'HH24MI') AND BB.SLFDGNSS_DT2  < TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '29' MINUTE), 'HH24MI'))*/	
				)
				]]>
		</select>
		
		
		<!-- Consulta si ha hecho el autodiagnóstico (para Encargado Oficial) -->
		<select id="selectSlfdgnssAtList2" resultType="MlMap">
			 <![CDATA[
			   SELECT *
			  FROM (
			  SELECT AA.* 
			  , CASE WHEN GET_SLFDGNSS_AMFM(TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDDHH24MISS')) = 'FM' THEN SLFDGNSS_FM_AT
				     WHEN GET_SLFDGNSS_AMFM(TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS'),'YYYYMMDDHH24MISS')) = 'AM' THEN SLFDGNSS_AM_AT
			    ELSE '' END AS SLFDGNSS_AT 
				FROM (
				SELECT 
					A.ISLPRSN_SN 
					, (CASE WHEN C.LOGIN_AT = 'Y' THEN C.PUSHID ELSE NULL END) AS MNGR_PUSHID
					, A.ISLPRSN_NM
					,CASE WHEN  GET_SLFDGNSS_AMFM(E.SLFDGNSS_DT) = 'AM' THEN 'Y' ELSE 'N' END AS SLFDGNSS_AM_AT        
		   			,CASE WHEN  GET_SLFDGNSS_AMFM(E.SLFDGNSS_DT) = 'FM' THEN 'Y' ELSE 'N' END AS SLFDGNSS_FM_AT
		   			,coalesce(A.SLFDGNSS_DT1,'1000') AS SLFDGNSS_DT1
					,coalesce(A.SLFDGNSS_DT2,'2000') AS SLFDGNSS_DT2
					, A.ISLPRSN_NM|| GET_PUSH_CODENAME('PE', 'MSG3') AS PUSH_MSG_MNG
					,coalesce(C.TRMNL_KND_CODE,'00401') AS MNGR_TRMNL_KND_CODE
				FROM TISL_ISLPRSN A
				JOIN TISL_TRMNL B
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND A.DELETE_AT = 'N'
				AND B.DELETE_AT = 'N'
				JOIN (SELECT * 
					  FROM TISL_MNGR tm
					  WHERE tm.MNGR_SN NOT IN ( SELECT MNGR_SN FROM TISL_MNGR tm2 WHERE tm2.LOGIN_ID = 'CORONA' OR tm2.LOGIN_ID LIKE '%0000') 
					 ) C
				ON A.ECSHG_MNGR_SN = C.MNGR_SN
				AND C.DELETE_AT = 'N'
				LEFT OUTER JOIN (SELECT A.* FROM TISL_ISLPRSN_STTUS_HIST A
				LEFT OUTER JOIN TISL_ISLPRSN_STTUS_HIST B		
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND A.STTUS_REGIST_DT < B.STTUS_REGIST_DT
				WHERE B.ISLPRSN_SN IS NULL
				) D
				ON A.ISLPRSN_SN = D.ISLPRSN_SN
				LEFT OUTER JOIN (SELECT A.* FROM TISL_ISLPRSN_SLFDGNSS A
				LEFT OUTER JOIN TISL_ISLPRSN_SLFDGNSS B
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND A.SLFDGNSS_DT < B.SLFDGNSS_DT
				WHERE B.ISLPRSN_SN IS NULL
				) E
				ON A.ISLPRSN_SN = E.ISLPRSN_SN
				WHERE 1=1
				AND D.ISLPRSN_STTUS_CODE IN ('00301')
				AND A.DELETE_AT = 'N'
				AND B.DELETE_AT = 'N'
				AND C.DELETE_AT = 'N'
				AND (B.PUSHID IS NOT NULL OR C.PUSHID  IS NOT NULL)
				) AA
				WHERE AA.MNGR_PUSHID IS NOT NULL
				) BB
				WHERE BB.SLFDGNSS_AT = 'N'
				AND BB.MNGR_TRMNL_KND_CODE = #{TRMNL_KND_CODE}
				AND	(
					/* 1 hora después de la hora designada, 1 vez cada uno */
					(coalesce(BB.SLFDGNSS_DT1, '1000') = TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '90' MINUTE), 'HH24MI'))
					OR	
					(coalesce(BB.SLFDGNSS_DT2, '2000') = TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '90' MINUTE), 'HH24MI'))
					/*
						(BB.SLFDGNSS_DT1  >= TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '30' MINUTE), 'HH24MI') 
					 	 AND BB.SLFDGNSS_DT1 < TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '29' MINUTE), 'HH24MI'))
					OR  (BB.SLFDGNSS_DT1  >= TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '60' MINUTE), 'HH24MI') 
				     	 AND BB.SLFDGNSS_DT1 < TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '59' MINUTE), 'HH24MI'))
					OR  (BB.SLFDGNSS_DT2  >= TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '30' MINUTE), 'HH24MI') 
				     	 AND BB.SLFDGNSS_DT2 < TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '29' MINUTE), 'HH24MI'))
					OR	(BB.SLFDGNSS_DT2  >= TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '60' MINUTE), 'HH24MI') 
				     	 AND BB.SLFDGNSS_DT2 < TO_CHAR(CURRENT_TIMESTAMP-(INTERVAL '59' MINUTE), 'HH24MI'))
			     	 */
				)
				]]>
		</select>
		
		
		<!-- Consulta si existe anormalía en el autodiagnóstico (para Encargado Oficial) -->
		<select id="selectSlfdgnssAbnormalityAtList" resultType="MlMap">
			 <![CDATA[
			SELECT *
			  FROM (
			  SELECT AA.* 
			    , TRIM(SUBSTR(coalesce(PYRXIA_AT, '')||coalesce(COUGH_AT, '')||coalesce(SORE_THROAT_AT, '')||coalesce(DYSPNEA_AT, ''),1, LENGTH(coalesce(PYRXIA_AT, '')||coalesce(COUGH_AT, '')||coalesce(SORE_THROAT_AT, '')||coalesce(DYSPNEA_AT, ''))-1)) AS SLFDGNSS
				FROM (
				SELECT 
					A.ISLPRSN_SN 
					, B.PUSHID AS USR_PUSHID
					, (CASE WHEN C.LOGIN_AT = 'Y' THEN C.PUSHID ELSE null END) AS MNGR_PUSHID
					, A.ISLPRSN_NM
		   			,CASE WHEN (E.PYRXIA_AT = 'Y' OR E.COUGH_AT = 'Y' OR E.SORE_THROAT_AT= 'Y' OR E.DYSPNEA_AT= 'Y') THEN 'Y'
		   			      ELSE 'N' END SLFDGNSS_AT
   			        ,E.SLFDGNSS_DT 
   			        ,CASE WHEN E.PYRXIA_AT ='Y' THEN 'Fiebre,'
   			              ELSE '' END AS PYRXIA_AT
   			        ,CASE WHEN E.COUGH_AT = 'Y' THEN ' Tos,'
   			        	  ELSE '' END AS COUGH_AT
					,CASE WHEN E.SORE_THROAT_AT = 'Y' THEN ' Dolor de garganta,'
						  ELSE '' END AS SORE_THROAT_AT
					,CASE WHEN E.DYSPNEA_AT = 'Y' THEN ' Dificultad respiratoria,'
						  ELSE '' END AS DYSPNEA_AT
				    ,GET_PUSH_CODENAME('PE', 'MSG4') AS PUSH_MSG
				    ,coalesce(C.TRMNL_KND_CODE,'00401') AS MNGR_TRMNL_KND_CODE
				FROM TISL_ISLPRSN A
				JOIN TISL_TRMNL B
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND A.DELETE_AT = 'N'
				AND B.DELETE_AT = 'N'
				JOIN (SELECT * 
					  FROM TISL_MNGR tm
					  WHERE tm.MNGR_SN NOT IN ( SELECT MNGR_SN FROM TISL_MNGR tm2 WHERE tm2.LOGIN_ID = 'CORONA' OR tm2.LOGIN_ID LIKE '%0000') 
					 ) C
				ON A.ECSHG_MNGR_SN = C.MNGR_SN
				AND C.DELETE_AT = 'N'
				LEFT OUTER JOIN (SELECT A.* FROM TISL_ISLPRSN_STTUS_HIST A
				LEFT OUTER JOIN TISL_ISLPRSN_STTUS_HIST B		
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND A.STTUS_REGIST_DT < B.STTUS_REGIST_DT
				WHERE B.ISLPRSN_SN IS NULL
				) D
				ON A.ISLPRSN_SN = D.ISLPRSN_SN
				LEFT OUTER JOIN (SELECT A.* FROM TISL_ISLPRSN_SLFDGNSS A
				LEFT OUTER JOIN TISL_ISLPRSN_SLFDGNSS B
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND A.SLFDGNSS_DT < B.SLFDGNSS_DT
				WHERE B.ISLPRSN_SN IS NULL
				) E
				ON A.ISLPRSN_SN = E.ISLPRSN_SN
				WHERE 1=1
				AND D.ISLPRSN_STTUS_CODE IN ('00301')
				AND A.DELETE_AT = 'N'
				AND B.DELETE_AT = 'N'
				AND C.DELETE_AT = 'N'
				AND (B.PUSHID IS NOT NULL OR C.PUSHID  IS NOT NULL)
				) AA
				) BB
				WHERE BB.SLFDGNSS_AT = 'Y'
				AND BB.MNGR_TRMNL_KND_CODE = #{TRMNL_KND_CODE}
				AND BB.SLFDGNSS_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') -(INTERVAL '1' MINUTE ),'YYYYMMDDHH24MI')||'00' 
				AND BB.SLFDGNSS_DT <  TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') -(INTERVAL '0' MINUTE ),'YYYYMMDDHH24MI')||'00'
				]]>
		</select>
		
		
		<!-- Buscar personas que han abandonado (para personas en cuarentena) -->
		<select id="selectScesnLocation" resultType="MlMap">
		<![CDATA[
			SELECT *
			FROM(
				SELECT
					A.ISLPRSN_NM,
					B.PUSHID AS USR_PUSHID,
					GET_PUSH_CODENAME(B.USE_LANG, 'MSG5') AS PUSH_MSG_USR,
					C.TRMNL_SN,
					C.ISLPRSN_SN,
					C.LC_COLCT_DT,
					C.SCESN_SE,
					C.ISLPRSN_XCNTS,
					C.ISLPRSN_YDNTS,
					C.MNGR_CNFIRM_AT,
					C.PROCESS_RESULT_CODE,
					coalesce(B.TRMNL_KND_CODE,'00401') AS USR_TRMNL_KND_CODE
				FROM
					TISL_ISLPRSN A, TISL_TRMNL B, TISL_ISLPRSN_SCESN_LC C , (SELECT * 
					  FROM TISL_MNGR tm
					  WHERE tm.MNGR_SN NOT IN ( SELECT MNGR_SN FROM TISL_MNGR tm2 WHERE tm2.LOGIN_ID = 'CORONA' OR tm2.LOGIN_ID LIKE '%0000') 
					 ) D
				WHERE 1=1
				AND
					A.DELETE_AT = 'N'
				AND
					B.DELETE_AT = 'N'
				AND
					A.ISLPRSN_SN = B.ISLPRSN_SN
				AND
					B.TRMNL_SN = C.TRMNL_SN
				AND 
					B.USE_LANG = #{USE_LANG}
				AND 
					A.ECSHG_MNGR_SN = D.MNGR_SN
				AND 
					B.LC_TRNSMIS_USE_AT NOT IN ('N')	
				AND (
					( C.LC_COLCT_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '1' MINUTE), 'YYYYMMDDHH24MI')||'00'  
					  AND C.LC_COLCT_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '0' MINUTE), 'YYYYMMDDHH24MI')||'00')
				OR
					( C.LC_COLCT_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '2' MINUTE), 'YYYYMMDDHH24MI')||'00'  
					  AND C.LC_COLCT_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '1' MINUTE), 'YYYYMMDDHH24MI')||'00')
				OR
					( C.LC_COLCT_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '3' MINUTE), 'YYYYMMDDHH24MI')||'00'  
					  AND C.LC_COLCT_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '2' MINUTE), 'YYYYMMDDHH24MI')||'00')
				)
			) A
			LEFT OUTER JOIN (
				SELECT A.*
				FROM TISL_ISLPRSN_STTUS_HIST A
				LEFT OUTER JOIN TISL_ISLPRSN_STTUS_HIST B
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND B.STTUS_REGIST_DT > A.STTUS_REGIST_DT
			    WHERE B.ISLPRSN_SN IS NULL
			) B
			ON A.ISLPRSN_SN = B.ISLPRSN_SN
			WHERE 1=1
			AND A.USR_TRMNL_KND_CODE = #{TRMNL_KND_CODE}
			AND B.ISLPRSN_STTUS_CODE = '00301'
		]]>
		</select>
		
		<!-- Buscar personas que han abandonado (para Encargado Oficial) -->
		<select id="selectScesnLocation2" resultType="MlMap">
		<![CDATA[
			SELECT * 
			FROM (
				SELECT
					A.ISLPRSN_NM,
					B.MNGR_NM,
					(CASE WHEN B.LOGIN_AT = 'Y' THEN B.PUSHID ELSE null END) AS MNGR_PUSHID , 
					A.ISLPRSN_NM||GET_PUSH_CODENAME('PE', 'MSG6') AS PUSH_MSG_MNG,
					C.TRMNL_SN, 
					C.ISLPRSN_SN, 
					C.LC_COLCT_DT, 
					C.SCESN_SE, 
					C.ISLPRSN_XCNTS, 
					C.ISLPRSN_YDNTS, 
					C.MNGR_CNFIRM_AT,
					C.PROCESS_RESULT_CODE,
					coalesce(B.TRMNL_KND_CODE,'00401') AS MNGR_TRMNL_KND_CODE
				FROM
					TISL_ISLPRSN A, (SELECT * 
					  FROM TISL_MNGR tm
					  WHERE tm.MNGR_SN NOT IN ( SELECT MNGR_SN FROM TISL_MNGR tm2 WHERE tm2.LOGIN_ID = 'CORONA' OR tm2.LOGIN_ID LIKE '%0000') 
					 ) B, TISL_ISLPRSN_SCESN_LC C ,TISL_TRMNL D
				WHERE 1=1
				AND
					A.DELETE_AT = 'N'
				AND
					B.DELETE_AT = 'N'
				AND
					D.DELETE_AT = 'N'
				AND
					A.ECSHG_MNGR_SN = B.MNGR_SN
				AND 
					A.ISLPRSN_SN = C.ISLPRSN_SN
				AND 
					A.ISLPRSN_SN = D.ISLPRSN_SN
				AND 
					D.LC_TRNSMIS_USE_AT NOT IN ('N')
				AND (
					( C.LC_COLCT_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '1' MINUTE), 'YYYYMMDDHH24MI')||'00'  
					  AND C.LC_COLCT_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '0' MINUTE), 'YYYYMMDDHH24MI')||'00')
				OR
					( C.LC_COLCT_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '2' MINUTE), 'YYYYMMDDHH24MI')||'00'  
					  AND C.LC_COLCT_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '1' MINUTE), 'YYYYMMDDHH24MI')||'00')
				OR
					( C.LC_COLCT_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '3' MINUTE), 'YYYYMMDDHH24MI')||'00'  
					  AND C.LC_COLCT_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '2' MINUTE), 'YYYYMMDDHH24MI')||'00')
				)
			) A
			LEFT OUTER JOIN (
				SELECT A.*
				FROM TISL_ISLPRSN_STTUS_HIST A
				LEFT OUTER JOIN TISL_ISLPRSN_STTUS_HIST B
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND B.STTUS_REGIST_DT > A.STTUS_REGIST_DT
			    WHERE B.ISLPRSN_SN IS NULL
			) B
			ON A.ISLPRSN_SN = B.ISLPRSN_SN
			WHERE 1=1
			AND A.MNGR_TRMNL_KND_CODE = #{TRMNL_KND_CODE}
			AND B.ISLPRSN_STTUS_CODE = '00301'
		]]>
		</select>
		

		<!--  Sin señal de GPS (para Encargado Oficial)  -->
		<select id = "selectGpsStatus" resultType="MlMap">
			<![CDATA[
			SELECT *
			FROM (
				SELECT 
					B.ISLPRSN_SN,
					B.ISLPRSN_NM,
					A.MNGR_NM,
					(CASE WHEN A.LOGIN_AT = 'Y' THEN A.PUSHID ELSE null END) AS MNGR_PUSHID,
					REPLACE(GET_PUSH_CODENAME('PE', 'MSG7'),'###',B.ISLPRSN_NM) AS PUSH_MSG_MNG,
					A.TRMNL_KND_CODE AS MNGR_TRMNL_KND_CODE
				FROM (SELECT * 
					  FROM TISL_MNGR tm
					  WHERE tm.MNGR_SN NOT IN ( SELECT MNGR_SN FROM TISL_MNGR tm2 WHERE tm2.LOGIN_ID = 'CORONA' OR tm2.LOGIN_ID LIKE '%0000') 
					 ) A , TISL_ISLPRSN B , TISL_TRMNL C
				WHERE 1=1
				AND A.DELETE_AT = 'N'
				AND B.DELETE_AT = 'N'
				AND C.DELETE_AT = 'N'
				AND A.MNGR_SN  = B.ECSHG_MNGR_SN 
				AND B.ISLPRSN_SN  = C.ISLPRSN_SN
				AND C.LC_TRNSMIS_USE_AT NOT IN ('N')
				AND 
				(
					(C.GPS_ONOFF  = 'OFF'
										AND (
											( C.GPS_OFF_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '1' MINUTE), 'YYYYMMDDHH24MI')||'00'  
											  AND C.GPS_OFF_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '0' MINUTE), 'YYYYMMDDHH24MI')||'00')
										OR
											( C.GPS_OFF_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '2' MINUTE), 'YYYYMMDDHH24MI')||'00'  
											  AND C.GPS_OFF_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '1' MINUTE), 'YYYYMMDDHH24MI')||'00')
										OR
											( C.GPS_OFF_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '3' MINUTE), 'YYYYMMDDHH24MI')||'00'  
											  AND C.GPS_OFF_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '2' MINUTE), 'YYYYMMDDHH24MI')||'00')
										)
										
					)
					OR 
					  
						( C.LAST_COMM_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '20' MINUTE ),'YYYYMMDDHH24MI')||'00'
							  AND C.LAST_COMM_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') -(INTERVAL '19' MINUTE ),'YYYYMMDDHH24MI')||'00')
						OR
							( C.LAST_COMM_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '21' MINUTE ),'YYYYMMDDHH24MI')||'00'
							  AND C.LAST_COMM_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') -(INTERVAL '20' MINUTE ),'YYYYMMDDHH24MI')||'00')
						OR
							( C.LAST_COMM_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '22' MINUTE ),'YYYYMMDDHH24MI')||'00'
							  AND C.LAST_COMM_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') -(INTERVAL '21' MINUTE ),'YYYYMMDDHH24MI')||'00')
					
				)
			) A
			LEFT OUTER JOIN (
				SELECT A.*
				FROM TISL_ISLPRSN_STTUS_HIST A
				LEFT OUTER JOIN TISL_ISLPRSN_STTUS_HIST B
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND B.STTUS_REGIST_DT > A.STTUS_REGIST_DT
			    WHERE B.ISLPRSN_SN IS NULL
			) B
			ON A.ISLPRSN_SN = B.ISLPRSN_SN
			WHERE 1=1
			AND A.MNGR_TRMNL_KND_CODE = #{TRMNL_KND_CODE}
			AND B.ISLPRSN_STTUS_CODE = '00301'
			]]>
		</select>


		<!-- Verificar si el estado de cuarentena ha terminado  -->
		<select id="selectUnState" resultType="MlMap">
		<![CDATA[
		SELECT *
        FROM (
        SELECT AA.* 
          FROM (
          SELECT 
              A.ISLPRSN_SN 
              , B.PUSHID AS USR_PUSHID
              , C.PUSHID AS MNGR_PUSHID
              , A.ISLPRSN_NM
              ,CASE WHEN ( GET_SLFDGNSS_AMFM(E.SLFDGNSS_DT) = 'AM') THEN 'Y' ELSE 'N' END AS SLFDGNSS_AM_AT        
                 ,CASE WHEN ( GET_SLFDGNSS_AMFM(E.SLFDGNSS_DT) = 'FM') THEN 'Y' ELSE 'N' END AS SLFDGNSS_FM_AT
                 ,CASE WHEN (E.PYRXIA_AT = 'Y' OR E.COUGH_AT = 'Y' OR E.SORE_THROAT_AT= 'Y' OR DYSPNEA_AT= 'Y') THEN 'Y'
                       ELSE 'N' END SLFDGNSS_AT
                 ,D.STTUS_REGIST_DT
                 ,GET_PUSH_CODENAME(B.USE_LANG, 'MSG8') AS PUSH_MSG
          FROM TISL_ISLPRSN A
          JOIN TISL_TRMNL B
          ON A.ISLPRSN_SN = B.ISLPRSN_SN
          AND A.DELETE_AT = 'N'
          AND B.DELETE_AT = 'N'
          JOIN (SELECT * 
					  FROM TISL_MNGR tm
					  WHERE tm.MNGR_SN NOT IN ( SELECT MNGR_SN FROM TISL_MNGR tm2 WHERE tm2.LOGIN_ID = 'CORONA' OR tm2.LOGIN_ID LIKE '%0000') 
					 ) C
          ON A.ECSHG_MNGR_SN = C.MNGR_SN
          AND C.DELETE_AT = 'N'
          LEFT OUTER JOIN (SELECT A.* FROM TISL_ISLPRSN_STTUS_HIST A
          LEFT OUTER JOIN TISL_ISLPRSN_STTUS_HIST B        
          ON A.ISLPRSN_SN = B.ISLPRSN_SN
          AND A.STTUS_REGIST_DT < B.STTUS_REGIST_DT
          WHERE B.ISLPRSN_SN IS NULL
          ) D
          ON A.ISLPRSN_SN = D.ISLPRSN_SN
          LEFT OUTER JOIN (SELECT A.* FROM TISL_ISLPRSN_SLFDGNSS A
          LEFT OUTER JOIN TISL_ISLPRSN_SLFDGNSS B
          ON A.ISLPRSN_SN = B.ISLPRSN_SN
          AND A.SLFDGNSS_DT < B.SLFDGNSS_DT
          WHERE B.ISLPRSN_SN IS NULL
          ) E
          ON A.ISLPRSN_SN = E.ISLPRSN_SN
          WHERE 1=1
          AND D.ISLPRSN_STTUS_CODE IN ('00302')
          AND A.DELETE_AT = 'N'
          AND B.DELETE_AT = 'N'
          AND C.DELETE_AT = 'N'
          AND (B.PUSHID IS NOT NULL OR C.PUSHID  IS NOT NULL)
          ) AA
          ) BB
          WHERE 1=1
          AND BB.STTUS_REGIST_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '1' MINUTE ),'YYYYMMDDHH24MI')||'00' 
          AND BB.STTUS_REGIST_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') +(INTERVAL '1' MINUTE ),'YYYYMMDDHH24MI')||'00'
				]]>
		</select>
		
		
		<!-- FAKE GPS -->
		<select id="selectFakeGPSUser" resultType="MlMap">
		<![CDATA[
		SELECT *
		FROM (
			SELECT 
				A.ISLPRSN_SN,
				A.ISLPRSN_NM,
				B.MNGR_NM,
				(CASE WHEN B.LOGIN_AT = 'Y' THEN B.PUSHID ELSE null END) AS MNGR_PUSHID,
				REPLACE(GET_PUSH_CODENAME('PE', 'MSG9'), '###', A.ISLPRSN_NM) AS PUSH_MSG_MNG,
				C.trmnl_knd_code
			FROM TISL_ISLPRSN A, TISL_MNGR B, TISL_TRMNL C
			WHERE 1=1
			AND A.DELETE_AT = 'N'
			AND B.DELETE_AT = 'N'
			AND C.DELETE_AT = 'N'
			AND B.MNGR_SN  = A.ECSHG_MNGR_SN
			AND A.ISLPRSN_SN  = C.ISLPRSN_SN
			AND 
				GPS_ONOFF = 'FAKE' 
			AND 
			(
				(GPS_OFF_DT >= TO_CHAR(TO_TIMESTAMP(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '1' MINUTE), 'YYYYMMDDHH24MI')||'00' AND GPS_OFF_DT < TO_CHAR(TO_TIMESTAMP(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '0' MINUTE), 'YYYYMMDDHH24MI')||'00') 
			 OR (GPS_OFF_DT >= TO_CHAR(TO_TIMESTAMP(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '2' MINUTE), 'YYYYMMDDHH24MI')||'00' AND GPS_OFF_DT < TO_CHAR(TO_TIMESTAMP(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '1' MINUTE), 'YYYYMMDDHH24MI')||'00')
			 OR (GPS_OFF_DT >= TO_CHAR(TO_TIMESTAMP(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '3' MINUTE), 'YYYYMMDDHH24MI')||'00' AND GPS_OFF_DT < TO_CHAR(TO_TIMESTAMP(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '2' MINUTE), 'YYYYMMDDHH24MI')||'00')
			)
		) A
		LEFT OUTER JOIN (
			SELECT A.*
			FROM TISL_ISLPRSN_STTUS_HIST A
			LEFT OUTER JOIN TISL_ISLPRSN_STTUS_HIST B
			ON A.ISLPRSN_SN = B.ISLPRSN_SN
			AND B.STTUS_REGIST_DT > A.STTUS_REGIST_DT
		    WHERE B.ISLPRSN_SN IS NULL
		) B
		ON A.ISLPRSN_SN = B.ISLPRSN_SN
		WHERE 1=1
		AND A.TRMNL_KND_CODE = #{TRMNL_KND_CODE}
		AND B.ISLPRSN_STTUS_CODE = '00301';
		]]>
		</select>
		
		
		
		<!-- Silent push -->
		<select id = "selectLastCmm" resultType="MlMap">
			<![CDATA[
			SELECT A.ISLPRSN_SN , A.TRMNL_SN, A.ISLPRSN_NM , A.USR_PUSHID
			FROM (
				SELECT 
					B.ISLPRSN_SN,
					C.TRMNL_SN,
					B.ISLPRSN_NM,
					C.PUSHID AS USR_PUSHID ,
					C.TRMNL_KND_CODE AS USR_TRMNL_KND_CODE
				FROM (SELECT * 
					  FROM TISL_MNGR tm
					  WHERE tm.MNGR_SN NOT IN ( SELECT MNGR_SN FROM TISL_MNGR tm2 WHERE tm2.LOGIN_ID = 'CORONA' OR tm2.LOGIN_ID LIKE '%0000') 
					 ) A , TISL_ISLPRSN B , TISL_TRMNL C
				WHERE 1=1
				AND A.DELETE_AT = 'N'
				AND B.DELETE_AT = 'N'
				AND C.DELETE_AT = 'N'
				AND A.MNGR_SN  = B.ECSHG_MNGR_SN 
				AND B.ISLPRSN_SN  = C.ISLPRSN_SN
				AND C.LC_TRNSMIS_USE_AT NOT IN ('N')
				AND C.USE_LANG = #{USE_LANG}
				AND 
				(
						( C.LAST_COMM_DT >= TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') - (INTERVAL '17' MINUTE ),'YYYYMMDDHH24MI')||'00'
							  AND C.LAST_COMM_DT < TO_CHAR(to_timestamp(#{TIME},'YYYYMMDDHH24MISS') -(INTERVAL '16' MINUTE ),'YYYYMMDDHH24MI')||'00')
				)
			) A
			LEFT OUTER JOIN (
				SELECT A.*
				FROM TISL_ISLPRSN_STTUS_HIST A
				LEFT OUTER JOIN TISL_ISLPRSN_STTUS_HIST B
				ON A.ISLPRSN_SN = B.ISLPRSN_SN
				AND B.STTUS_REGIST_DT > A.STTUS_REGIST_DT
			    WHERE B.ISLPRSN_SN IS NULL
			) B
			ON A.ISLPRSN_SN = B.ISLPRSN_SN
			WHERE 1=1
			AND A.USR_TRMNL_KND_CODE = #{TRMNL_KND_CODE}
			AND B.ISLPRSN_STTUS_CODE = '00301';
			]]>
		</select>
		
		
		<!-- db insert -->
		<insert id="insertPushTrnsmisHist">
		INSERT INTO TISL_PUSH_TRNSMIS_HIST
		(
			PUSH_TRNSMIS_SN
			,TRNSMIS_RESULT_CODE
			,TRNSMIS_RESULT_CN
			,TRNSMIS_DT
			,REGIST_DT
			,MNGR_SN
			,TRMNL_SN
			,ISLPRSN_SN
			,MESSAGE_ID
			,PUSH_KND_CODE
		)
		VALUES
        (
        	NEXTVAL('SEQ_TISL_PUSH_TRNSMIS_HIST_PK')
        	<choose>
        	<when test='message_id != null and message_id != ""'>
        	,'01401'
        	</when>
        	<otherwise>
        	,'01402'
        	</otherwise>
        	</choose>
			,#{SENDMAP}
			,TO_CHAR(CURRENT_TIMESTAMP,'YYYYMMDDHH24MISS')
			,TO_CHAR(CURRENT_TIMESTAMP,'YYYYMMDDHH24MISS')
			,#{MNGR_SN}::NUMERIC
			,#{TRMNL_SN}::NUMERIC
       		,#{ISLPRSN_SN}::NUMERIC
       		<choose>
        	<when test='message_id != null and message_id != ""'>
        	,substring(#{message_id},0,49)
        	</when>
        	<otherwise>
        	,substring(#{error},0,49)
        	</otherwise>
        	</choose>
       		,#{PUSH_KND_CODE}
       	)
		</insert>
		
</mapper>